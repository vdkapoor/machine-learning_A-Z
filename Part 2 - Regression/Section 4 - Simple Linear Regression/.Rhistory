train <- read.csv("C:/Users/Varun/Downloads/kaggle titanic/train.csv")
View(train)
str(train)
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
plot(fit)
install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
library(rattle)
library(rpart.plot)
library(RColorBrewer)
fancyRpartPlot(fit)
install.packages("swirl")
install.packages("swirl")
library("swirl")
swirl()
library("swirl")
swirl()
1:20
pi:10
15:1
:?
':'
':'
`:`
info(:)
info
info()
main()
num_vect=[0.5,55,-10,6]
num_vect=(0.5,55,-10,6)
info()
main()
`:`
? `:`
seq(1,20)
seq(0,10,by=05)
seq(0,10,by=0.5)
seq(0,10,length=30)
my_seq=seq(0,10,length=30)
my_seq<-seq(0,10,length=30)
my_seqv<- seq(5,10,length=30)
my_seq<- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect = c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect<1
tf
num_vect>=6
my_char<-("My","name","is")
my_char<-c("My","name","is")
my_char
paste0(my_char,collapse = " ")
paste(my_char,collapse = " ")
my_name=c(my_char,"singage")
my_name
paste(my_name,collapse = "")
paste(my_name,collapse = " ")
paste()
paste("Hello", "World!",sep = " ")
paste("Hello", "world!",sep = " ")
paste(c(1:3),c("X","Y","Z",seq=""))
paste(1:3,c("X","Y","Z",seq=""))
paste(1:3,c("X","Y","Z"),seq=""))
paste(1:3,c("X","Y","Z"),seq="")
paste(1:3,c("X","Y","Z"),sep ="")
paste(LETTERS,1:4,sep = ="_")
paste(LETTERS,1:4,sep  ="_")
paste(LETTERS,1:4,sep ="_")
paste(LETTERS,1:4,sep ="-")
c(44,NA,5,NA)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
y<-rnorm(NA,1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
help()
help("sample")
my_data
my_na=is.na(my_data)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
help("rnorm")
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
y[c(3,5,7)]
[c(3,5,7)]
index=c(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,10)]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,horf=NA)
vect <- c(foo=11,bar=2,horf=NA)
vect <- c(foo=11,bar=2,norf=NA)
vect
name(vect)
name(vect)
names(vect)
vect2/ <-c(11,2,NA)
vect2 <-c(11,2,NA)
names(vect2 <-c("foo","bar","norf"))
names(vect2) <-c("foo","bar","norf"))
names(vect2) <-c("foo","bar","norf")
identi(vect,vect2)
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector
)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
? matrix
matrix(data=1:20,nrow = 4,ncol = 5)
my_matrix2=matrix(data=1:20,nrow = 4,ncol = 5)
identical(mymatrix,mymatrix2)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,
| my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_work,cnames)
colnames(my_data,cnames)
help("colnames")
help("dim")
my_data
View(my_data)
colnames(my_data)
colnames(my_data)<-cnames
my_data
True==TRUE
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5=7
5==7
5!=7
!5==7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE, FALSE).
TRUE && c(TRUE,FALSE, FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE||  c(TRUE,FALSE,FALSE)
5>8 || 6!=8 && 4 >3.9
isTRUE(6>4)
2
2
identical('twins','twins')
xor(5==6)
xor(5==6,!FALSE)
2
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
swirl()
head(flags)
library(swirl)
swirl()
swirl()
swirl()
head(flags)
dim(flags)
viewinfo()
viewinfo(flags)
viewinfo()
class(flags)
cls_list,-lapply(flags,class)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_list<-sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_color<-flags[,11:17]
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
str(flags)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
(c(3, 4, 5, 5, 5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals(lappy(flags[],unique))
unique_vals<-(lappy(flags[],unique))
unique_vals<-(lapply(flags[],unique))
unique_vals<-(lapply(flags,unique))
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals  )
length(unique_vals)
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,length)
sapply(flags,length)
info()
skip()
info()
skip()
bye()
install.packages(c("crayon", "curl", "digest", "httr", "jsonlite", "mime", "openssl", "R6", "stringi", "stringr", "swirl", "testthat", "yaml", "zoo"))
help()
demo()
demo(recursion)
demos(Hershey)
cls
clearPushBack()
setwd("C:/Users/Varun/Desktop/Varun/ML/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing")
dataset=read.csv('Data.csv')
View(dataset)
dataset=read.csv('Data.csv')
dataset$Age=ifelse(is.na(dataset$Age),ave(dataset$Age,FUN=function(x)mean(x,na.rm = TRUE)),
dataset$Age)
view(dataset)
view(dataset)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,Fun=function(x)mean(x.na.rm=TRUE)),dataset$Salary)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x)mean(x.na.rm=TRUE)),
dataset$Salary)
dataset$Salary=ifelse(is.na(dataset$Salary),ave(dataset$Salary,FUN=function(x)mean(x,na.rm=TRUE)),
dataset$Salary)
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany')
labels=c(1,2,3))
dataset$Country=factor(dataset$Country,levels=c('France','Spain','Germany')
,labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased,levels=c('No','Yes'),
labels=c(0,1))
install.packages('caTools')
library(caTools)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
library(caTools)
set.seed(123)
split=sample.split(dataset$Purchased,SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
setwd("C:/Users/Varun/Desktop/Varun/ML/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset=read.csv('Salary_Data.csv')
dataset=read.csv('Salary_Data.csv')
